// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResourcesInternal.proto

package com.android.aapt2.proto;

public final class ResourcesInternal {
  private ResourcesInternal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CompiledFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aapt.pb.internal.CompiledFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the resource (in the form package:type/name).
     * </pre>
     *
     * <code>string resource_name = 1;</code>
     * @return The resourceName.
     */
    String getResourceName();
    /**
     * <pre>
     * The name of the resource (in the form package:type/name).
     * </pre>
     *
     * <code>string resource_name = 1;</code>
     * @return The bytes for resourceName.
     */
    com.google.protobuf.ByteString
        getResourceNameBytes();

    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     * @return The config.
     */
    ConfigurationOuterClass.Configuration getConfig();
    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     */
    ConfigurationOuterClass.ConfigurationOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * The type of the file.
     * </pre>
     *
     * <code>.aapt.pb.FileReference.Type type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The type of the file.
     * </pre>
     *
     * <code>.aapt.pb.FileReference.Type type = 3;</code>
     * @return The type.
     */
    Resources.FileReference.Type getType();

    /**
     * <pre>
     * The filesystem path to where the source file originated.
     * Mainly used to display helpful error messages.
     * </pre>
     *
     * <code>string source_path = 4;</code>
     * @return The sourcePath.
     */
    String getSourcePath();
    /**
     * <pre>
     * The filesystem path to where the source file originated.
     * Mainly used to display helpful error messages.
     * </pre>
     *
     * <code>string source_path = 4;</code>
     * @return The bytes for sourcePath.
     */
    com.google.protobuf.ByteString
        getSourcePathBytes();

    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    java.util.List<CompiledFile.Symbol>
        getExportedSymbolList();
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    CompiledFile.Symbol getExportedSymbol(int index);
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    int getExportedSymbolCount();
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    java.util.List<? extends CompiledFile.SymbolOrBuilder>
        getExportedSymbolOrBuilderList();
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    CompiledFile.SymbolOrBuilder getExportedSymbolOrBuilder(
            int index);
  }
  /**
   * <pre>
   * The top level message representing an external resource file (layout XML, PNG, etc).
   * This is used to represent a compiled file before it is linked. Only useful to aapt2.
   * </pre>
   *
   * Protobuf type {@code aapt.pb.internal.CompiledFile}
   */
  public static final class CompiledFile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aapt.pb.internal.CompiledFile)
      CompiledFileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompiledFile.newBuilder() to construct.
    private CompiledFile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompiledFile() {
      resourceName_ = "";
      type_ = 0;
      sourcePath_ = "";
      exportedSymbol_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new CompiledFile();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompiledFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              resourceName_ = s;
              break;
            }
            case 18: {
              ConfigurationOuterClass.Configuration.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(ConfigurationOuterClass.Configuration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              sourcePath_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                exportedSymbol_ = new java.util.ArrayList<Symbol>();
                mutable_bitField0_ |= 0x00000001;
              }
              exportedSymbol_.add(
                  input.readMessage(Symbol.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          exportedSymbol_ = java.util.Collections.unmodifiableList(exportedSymbol_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CompiledFile.class, Builder.class);
    }

    public interface SymbolOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aapt.pb.internal.CompiledFile.Symbol)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The name of the symbol (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The resourceName.
       */
      String getResourceName();
      /**
       * <pre>
       * The name of the symbol (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The bytes for resourceName.
       */
      com.google.protobuf.ByteString
          getResourceNameBytes();

      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       * @return Whether the source field is set.
       */
      boolean hasSource();
      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       * @return The source.
       */
      Resources.SourcePosition getSource();
      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       */
      Resources.SourcePositionOrBuilder getSourceOrBuilder();
    }
    /**
     * Protobuf type {@code aapt.pb.internal.CompiledFile.Symbol}
     */
    public static final class Symbol extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aapt.pb.internal.CompiledFile.Symbol)
        SymbolOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Symbol.newBuilder() to construct.
      private Symbol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Symbol() {
        resourceName_ = "";
      }

      @Override
      @SuppressWarnings({"unused"})
      protected Object newInstance(
          UnusedPrivateParameter unused) {
        return new Symbol();
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Symbol(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                String s = input.readStringRequireUtf8();

                resourceName_ = s;
                break;
              }
              case 18: {
                Resources.SourcePosition.Builder subBuilder = null;
                if (source_ != null) {
                  subBuilder = source_.toBuilder();
                }
                source_ = input.readMessage(Resources.SourcePosition.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(source_);
                  source_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_Symbol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Symbol.class, Builder.class);
      }

      public static final int RESOURCE_NAME_FIELD_NUMBER = 1;
      private volatile Object resourceName_;
      /**
       * <pre>
       * The name of the symbol (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The resourceName.
       */
      @Override
      public String getResourceName() {
        Object ref = resourceName_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          resourceName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the symbol (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The bytes for resourceName.
       */
      @Override
      public com.google.protobuf.ByteString
          getResourceNameBytes() {
        Object ref = resourceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          resourceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SOURCE_FIELD_NUMBER = 2;
      private Resources.SourcePosition source_;
      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       * @return Whether the source field is set.
       */
      @Override
      public boolean hasSource() {
        return source_ != null;
      }
      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       * @return The source.
       */
      @Override
      public Resources.SourcePosition getSource() {
        return source_ == null ? Resources.SourcePosition.getDefaultInstance() : source_;
      }
      /**
       * <pre>
       * The position in the file at which this symbol is defined. For debug use.
       * </pre>
       *
       * <code>.aapt.pb.SourcePosition source = 2;</code>
       */
      @Override
      public Resources.SourcePositionOrBuilder getSourceOrBuilder() {
        return getSource();
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getResourceNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourceName_);
        }
        if (source_ != null) {
          output.writeMessage(2, getSource());
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getResourceNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourceName_);
        }
        if (source_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSource());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Symbol)) {
          return super.equals(obj);
        }
        Symbol other = (Symbol) obj;

        if (!getResourceName()
            .equals(other.getResourceName())) return false;
        if (hasSource() != other.hasSource()) return false;
        if (hasSource()) {
          if (!getSource()
              .equals(other.getSource())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + RESOURCE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getResourceName().hashCode();
        if (hasSource()) {
          hash = (37 * hash) + SOURCE_FIELD_NUMBER;
          hash = (53 * hash) + getSource().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Symbol parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Symbol parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Symbol parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Symbol parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Symbol parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Symbol parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Symbol parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Symbol parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Symbol parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Symbol parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Symbol parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Symbol parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Symbol prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aapt.pb.internal.CompiledFile.Symbol}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aapt.pb.internal.CompiledFile.Symbol)
          SymbolOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_Symbol_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Symbol.class, Builder.class);
        }

        // Construct using com.android.aapt2.proto.ResourcesInternal.CompiledFile.Symbol.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          resourceName_ = "";

          if (sourceBuilder_ == null) {
            source_ = null;
          } else {
            source_ = null;
            sourceBuilder_ = null;
          }
          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor;
        }

        @Override
        public Symbol getDefaultInstanceForType() {
          return Symbol.getDefaultInstance();
        }

        @Override
        public Symbol build() {
          Symbol result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public Symbol buildPartial() {
          Symbol result = new Symbol(this);
          result.resourceName_ = resourceName_;
          if (sourceBuilder_ == null) {
            result.source_ = source_;
          } else {
            result.source_ = sourceBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Symbol) {
            return mergeFrom((Symbol)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Symbol other) {
          if (other == Symbol.getDefaultInstance()) return this;
          if (!other.getResourceName().isEmpty()) {
            resourceName_ = other.resourceName_;
            onChanged();
          }
          if (other.hasSource()) {
            mergeSource(other.getSource());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Symbol parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Symbol) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private Object resourceName_ = "";
        /**
         * <pre>
         * The name of the symbol (in the form package:type/name).
         * </pre>
         *
         * <code>string resource_name = 1;</code>
         * @return The resourceName.
         */
        public String getResourceName() {
          Object ref = resourceName_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            resourceName_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         * The name of the symbol (in the form package:type/name).
         * </pre>
         *
         * <code>string resource_name = 1;</code>
         * @return The bytes for resourceName.
         */
        public com.google.protobuf.ByteString
            getResourceNameBytes() {
          Object ref = resourceName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            resourceName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the symbol (in the form package:type/name).
         * </pre>
         *
         * <code>string resource_name = 1;</code>
         * @param value The resourceName to set.
         * @return This builder for chaining.
         */
        public Builder setResourceName(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          resourceName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the symbol (in the form package:type/name).
         * </pre>
         *
         * <code>string resource_name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearResourceName() {
          
          resourceName_ = getDefaultInstance().getResourceName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the symbol (in the form package:type/name).
         * </pre>
         *
         * <code>string resource_name = 1;</code>
         * @param value The bytes for resourceName to set.
         * @return This builder for chaining.
         */
        public Builder setResourceNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          resourceName_ = value;
          onChanged();
          return this;
        }

        private Resources.SourcePosition source_;
        private com.google.protobuf.SingleFieldBuilderV3<
            Resources.SourcePosition, Resources.SourcePosition.Builder, Resources.SourcePositionOrBuilder> sourceBuilder_;
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         * @return Whether the source field is set.
         */
        public boolean hasSource() {
          return sourceBuilder_ != null || source_ != null;
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         * @return The source.
         */
        public Resources.SourcePosition getSource() {
          if (sourceBuilder_ == null) {
            return source_ == null ? Resources.SourcePosition.getDefaultInstance() : source_;
          } else {
            return sourceBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Builder setSource(Resources.SourcePosition value) {
          if (sourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            sourceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Builder setSource(
            Resources.SourcePosition.Builder builderForValue) {
          if (sourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            sourceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Builder mergeSource(Resources.SourcePosition value) {
          if (sourceBuilder_ == null) {
            if (source_ != null) {
              source_ =
                Resources.SourcePosition.newBuilder(source_).mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            sourceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Builder clearSource() {
          if (sourceBuilder_ == null) {
            source_ = null;
            onChanged();
          } else {
            source_ = null;
            sourceBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Resources.SourcePosition.Builder getSourceBuilder() {
          
          onChanged();
          return getSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        public Resources.SourcePositionOrBuilder getSourceOrBuilder() {
          if (sourceBuilder_ != null) {
            return sourceBuilder_.getMessageOrBuilder();
          } else {
            return source_ == null ?
                Resources.SourcePosition.getDefaultInstance() : source_;
          }
        }
        /**
         * <pre>
         * The position in the file at which this symbol is defined. For debug use.
         * </pre>
         *
         * <code>.aapt.pb.SourcePosition source = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            Resources.SourcePosition, Resources.SourcePosition.Builder, Resources.SourcePositionOrBuilder>
            getSourceFieldBuilder() {
          if (sourceBuilder_ == null) {
            sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Resources.SourcePosition, Resources.SourcePosition.Builder, Resources.SourcePositionOrBuilder>(
                    getSource(),
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          return sourceBuilder_;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aapt.pb.internal.CompiledFile.Symbol)
      }

      // @@protoc_insertion_point(class_scope:aapt.pb.internal.CompiledFile.Symbol)
      private static final Symbol DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Symbol();
      }

      public static Symbol getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Symbol>
          PARSER = new com.google.protobuf.AbstractParser<Symbol>() {
        @Override
        public Symbol parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Symbol(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Symbol> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Symbol> getParserForType() {
        return PARSER;
      }

      @Override
      public Symbol getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int RESOURCE_NAME_FIELD_NUMBER = 1;
    private volatile Object resourceName_;
    /**
     * <pre>
     * The name of the resource (in the form package:type/name).
     * </pre>
     *
     * <code>string resource_name = 1;</code>
     * @return The resourceName.
     */
    @Override
    public String getResourceName() {
      Object ref = resourceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        resourceName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the resource (in the form package:type/name).
     * </pre>
     *
     * <code>string resource_name = 1;</code>
     * @return The bytes for resourceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getResourceNameBytes() {
      Object ref = resourceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        resourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private ConfigurationOuterClass.Configuration config_;
    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     * @return Whether the config field is set.
     */
    @Override
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     * @return The config.
     */
    @Override
    public ConfigurationOuterClass.Configuration getConfig() {
      return config_ == null ? ConfigurationOuterClass.Configuration.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * The configuration for which the resource is defined.
     * </pre>
     *
     * <code>.aapt.pb.Configuration config = 2;</code>
     */
    @Override
    public ConfigurationOuterClass.ConfigurationOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * The type of the file.
     * </pre>
     *
     * <code>.aapt.pb.FileReference.Type type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type of the file.
     * </pre>
     *
     * <code>.aapt.pb.FileReference.Type type = 3;</code>
     * @return The type.
     */
    @Override public Resources.FileReference.Type getType() {
      @SuppressWarnings("deprecation")
      Resources.FileReference.Type result = Resources.FileReference.Type.valueOf(type_);
      return result == null ? Resources.FileReference.Type.UNRECOGNIZED : result;
    }

    public static final int SOURCE_PATH_FIELD_NUMBER = 4;
    private volatile Object sourcePath_;
    /**
     * <pre>
     * The filesystem path to where the source file originated.
     * Mainly used to display helpful error messages.
     * </pre>
     *
     * <code>string source_path = 4;</code>
     * @return The sourcePath.
     */
    @Override
    public String getSourcePath() {
      Object ref = sourcePath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sourcePath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The filesystem path to where the source file originated.
     * Mainly used to display helpful error messages.
     * </pre>
     *
     * <code>string source_path = 4;</code>
     * @return The bytes for sourcePath.
     */
    @Override
    public com.google.protobuf.ByteString
        getSourcePathBytes() {
      Object ref = sourcePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sourcePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPORTED_SYMBOL_FIELD_NUMBER = 5;
    private java.util.List<Symbol> exportedSymbol_;
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    @Override
    public java.util.List<Symbol> getExportedSymbolList() {
      return exportedSymbol_;
    }
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    @Override
    public java.util.List<? extends SymbolOrBuilder>
        getExportedSymbolOrBuilderList() {
      return exportedSymbol_;
    }
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    @Override
    public int getExportedSymbolCount() {
      return exportedSymbol_.size();
    }
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    @Override
    public Symbol getExportedSymbol(int index) {
      return exportedSymbol_.get(index);
    }
    /**
     * <pre>
     * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
     * </pre>
     *
     * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
     */
    @Override
    public SymbolOrBuilder getExportedSymbolOrBuilder(
        int index) {
      return exportedSymbol_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getResourceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourceName_);
      }
      if (config_ != null) {
        output.writeMessage(2, getConfig());
      }
      if (type_ != Resources.FileReference.Type.UNKNOWN.getNumber()) {
        output.writeEnum(3, type_);
      }
      if (!getSourcePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sourcePath_);
      }
      for (int i = 0; i < exportedSymbol_.size(); i++) {
        output.writeMessage(5, exportedSymbol_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getResourceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourceName_);
      }
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      if (type_ != Resources.FileReference.Type.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (!getSourcePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sourcePath_);
      }
      for (int i = 0; i < exportedSymbol_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, exportedSymbol_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CompiledFile)) {
        return super.equals(obj);
      }
      CompiledFile other = (CompiledFile) obj;

      if (!getResourceName()
          .equals(other.getResourceName())) return false;
      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (type_ != other.type_) return false;
      if (!getSourcePath()
          .equals(other.getSourcePath())) return false;
      if (!getExportedSymbolList()
          .equals(other.getExportedSymbolList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESOURCE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getResourceName().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SOURCE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getSourcePath().hashCode();
      if (getExportedSymbolCount() > 0) {
        hash = (37 * hash) + EXPORTED_SYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + getExportedSymbolList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CompiledFile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompiledFile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompiledFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompiledFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompiledFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompiledFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompiledFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompiledFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompiledFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CompiledFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompiledFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompiledFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CompiledFile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top level message representing an external resource file (layout XML, PNG, etc).
     * This is used to represent a compiled file before it is linked. Only useful to aapt2.
     * </pre>
     *
     * Protobuf type {@code aapt.pb.internal.CompiledFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aapt.pb.internal.CompiledFile)
        CompiledFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CompiledFile.class, Builder.class);
      }

      // Construct using com.android.aapt2.proto.ResourcesInternal.CompiledFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExportedSymbolFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        resourceName_ = "";

        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        type_ = 0;

        sourcePath_ = "";

        if (exportedSymbolBuilder_ == null) {
          exportedSymbol_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          exportedSymbolBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ResourcesInternal.internal_static_aapt_pb_internal_CompiledFile_descriptor;
      }

      @Override
      public CompiledFile getDefaultInstanceForType() {
        return CompiledFile.getDefaultInstance();
      }

      @Override
      public CompiledFile build() {
        CompiledFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public CompiledFile buildPartial() {
        CompiledFile result = new CompiledFile(this);
        int from_bitField0_ = bitField0_;
        result.resourceName_ = resourceName_;
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.type_ = type_;
        result.sourcePath_ = sourcePath_;
        if (exportedSymbolBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            exportedSymbol_ = java.util.Collections.unmodifiableList(exportedSymbol_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.exportedSymbol_ = exportedSymbol_;
        } else {
          result.exportedSymbol_ = exportedSymbolBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CompiledFile) {
          return mergeFrom((CompiledFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CompiledFile other) {
        if (other == CompiledFile.getDefaultInstance()) return this;
        if (!other.getResourceName().isEmpty()) {
          resourceName_ = other.resourceName_;
          onChanged();
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getSourcePath().isEmpty()) {
          sourcePath_ = other.sourcePath_;
          onChanged();
        }
        if (exportedSymbolBuilder_ == null) {
          if (!other.exportedSymbol_.isEmpty()) {
            if (exportedSymbol_.isEmpty()) {
              exportedSymbol_ = other.exportedSymbol_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExportedSymbolIsMutable();
              exportedSymbol_.addAll(other.exportedSymbol_);
            }
            onChanged();
          }
        } else {
          if (!other.exportedSymbol_.isEmpty()) {
            if (exportedSymbolBuilder_.isEmpty()) {
              exportedSymbolBuilder_.dispose();
              exportedSymbolBuilder_ = null;
              exportedSymbol_ = other.exportedSymbol_;
              bitField0_ = (bitField0_ & ~0x00000001);
              exportedSymbolBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExportedSymbolFieldBuilder() : null;
            } else {
              exportedSymbolBuilder_.addAllMessages(other.exportedSymbol_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CompiledFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CompiledFile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object resourceName_ = "";
      /**
       * <pre>
       * The name of the resource (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The resourceName.
       */
      public String getResourceName() {
        Object ref = resourceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          resourceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The name of the resource (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return The bytes for resourceName.
       */
      public com.google.protobuf.ByteString
          getResourceNameBytes() {
        Object ref = resourceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          resourceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the resource (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @param value The resourceName to set.
       * @return This builder for chaining.
       */
      public Builder setResourceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the resource (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResourceName() {
        
        resourceName_ = getDefaultInstance().getResourceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the resource (in the form package:type/name).
       * </pre>
       *
       * <code>string resource_name = 1;</code>
       * @param value The bytes for resourceName to set.
       * @return This builder for chaining.
       */
      public Builder setResourceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resourceName_ = value;
        onChanged();
        return this;
      }

      private ConfigurationOuterClass.Configuration config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          ConfigurationOuterClass.Configuration, ConfigurationOuterClass.Configuration.Builder, ConfigurationOuterClass.ConfigurationOrBuilder> configBuilder_;
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       * @return Whether the config field is set.
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       * @return The config.
       */
      public ConfigurationOuterClass.Configuration getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? ConfigurationOuterClass.Configuration.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public Builder setConfig(ConfigurationOuterClass.Configuration value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public Builder setConfig(
          ConfigurationOuterClass.Configuration.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public Builder mergeConfig(ConfigurationOuterClass.Configuration value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              ConfigurationOuterClass.Configuration.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public ConfigurationOuterClass.Configuration.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      public ConfigurationOuterClass.ConfigurationOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              ConfigurationOuterClass.Configuration.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * The configuration for which the resource is defined.
       * </pre>
       *
       * <code>.aapt.pb.Configuration config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ConfigurationOuterClass.Configuration, ConfigurationOuterClass.Configuration.Builder, ConfigurationOuterClass.ConfigurationOrBuilder>
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ConfigurationOuterClass.Configuration, ConfigurationOuterClass.Configuration.Builder, ConfigurationOuterClass.ConfigurationOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The type of the file.
       * </pre>
       *
       * <code>.aapt.pb.FileReference.Type type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      @Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The type of the file.
       * </pre>
       *
       * <code>.aapt.pb.FileReference.Type type = 3;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the file.
       * </pre>
       *
       * <code>.aapt.pb.FileReference.Type type = 3;</code>
       * @return The type.
       */
      @Override
      public Resources.FileReference.Type getType() {
        @SuppressWarnings("deprecation")
        Resources.FileReference.Type result = Resources.FileReference.Type.valueOf(type_);
        return result == null ? Resources.FileReference.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of the file.
       * </pre>
       *
       * <code>.aapt.pb.FileReference.Type type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(Resources.FileReference.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the file.
       * </pre>
       *
       * <code>.aapt.pb.FileReference.Type type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private Object sourcePath_ = "";
      /**
       * <pre>
       * The filesystem path to where the source file originated.
       * Mainly used to display helpful error messages.
       * </pre>
       *
       * <code>string source_path = 4;</code>
       * @return The sourcePath.
       */
      public String getSourcePath() {
        Object ref = sourcePath_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sourcePath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The filesystem path to where the source file originated.
       * Mainly used to display helpful error messages.
       * </pre>
       *
       * <code>string source_path = 4;</code>
       * @return The bytes for sourcePath.
       */
      public com.google.protobuf.ByteString
          getSourcePathBytes() {
        Object ref = sourcePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sourcePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The filesystem path to where the source file originated.
       * Mainly used to display helpful error messages.
       * </pre>
       *
       * <code>string source_path = 4;</code>
       * @param value The sourcePath to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePath(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sourcePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The filesystem path to where the source file originated.
       * Mainly used to display helpful error messages.
       * </pre>
       *
       * <code>string source_path = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourcePath() {
        
        sourcePath_ = getDefaultInstance().getSourcePath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The filesystem path to where the source file originated.
       * Mainly used to display helpful error messages.
       * </pre>
       *
       * <code>string source_path = 4;</code>
       * @param value The bytes for sourcePath to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sourcePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<Symbol> exportedSymbol_ =
        java.util.Collections.emptyList();
      private void ensureExportedSymbolIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          exportedSymbol_ = new java.util.ArrayList<Symbol>(exportedSymbol_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Symbol, Symbol.Builder, SymbolOrBuilder> exportedSymbolBuilder_;

      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public java.util.List<Symbol> getExportedSymbolList() {
        if (exportedSymbolBuilder_ == null) {
          return java.util.Collections.unmodifiableList(exportedSymbol_);
        } else {
          return exportedSymbolBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public int getExportedSymbolCount() {
        if (exportedSymbolBuilder_ == null) {
          return exportedSymbol_.size();
        } else {
          return exportedSymbolBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Symbol getExportedSymbol(int index) {
        if (exportedSymbolBuilder_ == null) {
          return exportedSymbol_.get(index);
        } else {
          return exportedSymbolBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder setExportedSymbol(
          int index, Symbol value) {
        if (exportedSymbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExportedSymbolIsMutable();
          exportedSymbol_.set(index, value);
          onChanged();
        } else {
          exportedSymbolBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder setExportedSymbol(
          int index, Symbol.Builder builderForValue) {
        if (exportedSymbolBuilder_ == null) {
          ensureExportedSymbolIsMutable();
          exportedSymbol_.set(index, builderForValue.build());
          onChanged();
        } else {
          exportedSymbolBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder addExportedSymbol(Symbol value) {
        if (exportedSymbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExportedSymbolIsMutable();
          exportedSymbol_.add(value);
          onChanged();
        } else {
          exportedSymbolBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder addExportedSymbol(
          int index, Symbol value) {
        if (exportedSymbolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExportedSymbolIsMutable();
          exportedSymbol_.add(index, value);
          onChanged();
        } else {
          exportedSymbolBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder addExportedSymbol(
          Symbol.Builder builderForValue) {
        if (exportedSymbolBuilder_ == null) {
          ensureExportedSymbolIsMutable();
          exportedSymbol_.add(builderForValue.build());
          onChanged();
        } else {
          exportedSymbolBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder addExportedSymbol(
          int index, Symbol.Builder builderForValue) {
        if (exportedSymbolBuilder_ == null) {
          ensureExportedSymbolIsMutable();
          exportedSymbol_.add(index, builderForValue.build());
          onChanged();
        } else {
          exportedSymbolBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder addAllExportedSymbol(
          Iterable<? extends Symbol> values) {
        if (exportedSymbolBuilder_ == null) {
          ensureExportedSymbolIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, exportedSymbol_);
          onChanged();
        } else {
          exportedSymbolBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder clearExportedSymbol() {
        if (exportedSymbolBuilder_ == null) {
          exportedSymbol_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          exportedSymbolBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Builder removeExportedSymbol(int index) {
        if (exportedSymbolBuilder_ == null) {
          ensureExportedSymbolIsMutable();
          exportedSymbol_.remove(index);
          onChanged();
        } else {
          exportedSymbolBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Symbol.Builder getExportedSymbolBuilder(
          int index) {
        return getExportedSymbolFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public SymbolOrBuilder getExportedSymbolOrBuilder(
          int index) {
        if (exportedSymbolBuilder_ == null) {
          return exportedSymbol_.get(index);  } else {
          return exportedSymbolBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public java.util.List<? extends SymbolOrBuilder>
           getExportedSymbolOrBuilderList() {
        if (exportedSymbolBuilder_ != null) {
          return exportedSymbolBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(exportedSymbol_);
        }
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Symbol.Builder addExportedSymbolBuilder() {
        return getExportedSymbolFieldBuilder().addBuilder(
            Symbol.getDefaultInstance());
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public Symbol.Builder addExportedSymbolBuilder(
          int index) {
        return getExportedSymbolFieldBuilder().addBuilder(
            index, Symbol.getDefaultInstance());
      }
      /**
       * <pre>
       * Any symbols this file auto-generates/exports (eg. &#64;+id/foo in an XML file).
       * </pre>
       *
       * <code>repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;</code>
       */
      public java.util.List<Symbol.Builder>
           getExportedSymbolBuilderList() {
        return getExportedSymbolFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Symbol, Symbol.Builder, SymbolOrBuilder>
          getExportedSymbolFieldBuilder() {
        if (exportedSymbolBuilder_ == null) {
          exportedSymbolBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Symbol, Symbol.Builder, SymbolOrBuilder>(
                  exportedSymbol_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          exportedSymbol_ = null;
        }
        return exportedSymbolBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aapt.pb.internal.CompiledFile)
    }

    // @@protoc_insertion_point(class_scope:aapt.pb.internal.CompiledFile)
    private static final CompiledFile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CompiledFile();
    }

    public static CompiledFile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompiledFile>
        PARSER = new com.google.protobuf.AbstractParser<CompiledFile>() {
      @Override
      public CompiledFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompiledFile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompiledFile> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CompiledFile> getParserForType() {
      return PARSER;
    }

    @Override
    public CompiledFile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aapt_pb_internal_CompiledFile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aapt_pb_internal_CompiledFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aapt_pb_internal_CompiledFile_Symbol_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\027ResourcesInternal.proto\022\020aapt.pb.inter" +
      "nal\032\023Configuration.proto\032\017Resources.prot" +
      "o\"\227\002\n\014CompiledFile\022\025\n\rresource_name\030\001 \001(" +
      "\t\022&\n\006config\030\002 \001(\0132\026.aapt.pb.Configuratio" +
      "n\022)\n\004type\030\003 \001(\0162\033.aapt.pb.FileReference." +
      "Type\022\023\n\013source_path\030\004 \001(\t\022>\n\017exported_sy" +
      "mbol\030\005 \003(\0132%.aapt.pb.internal.CompiledFi" +
      "le.Symbol\032H\n\006Symbol\022\025\n\rresource_name\030\001 \001" +
      "(\t\022\'\n\006source\030\002 \001(\0132\027.aapt.pb.SourcePosit" +
      "ionB\033\n\027com.android.aapt2.protoH\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ConfigurationOuterClass.getDescriptor(),
          Resources.getDescriptor(),
        });
    internal_static_aapt_pb_internal_CompiledFile_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aapt_pb_internal_CompiledFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aapt_pb_internal_CompiledFile_descriptor,
        new String[] { "ResourceName", "Config", "Type", "SourcePath", "ExportedSymbol", });
    internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor =
      internal_static_aapt_pb_internal_CompiledFile_descriptor.getNestedTypes().get(0);
    internal_static_aapt_pb_internal_CompiledFile_Symbol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aapt_pb_internal_CompiledFile_Symbol_descriptor,
        new String[] { "ResourceName", "Source", });
    ConfigurationOuterClass.getDescriptor();
    Resources.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
